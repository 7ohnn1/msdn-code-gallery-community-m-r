'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System


<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.ComponentModel.ToolboxItem(true),  _
 System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 System.Xml.Serialization.XmlRootAttribute("dsPURCHASE_MASTER"),  _
 System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsPURCHASE_MASTER
    Inherits System.Data.DataSet
    
    Private tableV_PURCHASE_MASTER As V_PURCHASE_MASTERDataTable
    
    Private _schemaSerializationMode As System.Data.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("V_PURCHASE_MASTER")) Is Nothing) Then
                MyBase.Tables.Add(New V_PURCHASE_MASTERDataTable(ds.Tables("V_PURCHASE_MASTER")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property V_PURCHASE_MASTER() As V_PURCHASE_MASTERDataTable
        Get
            Return Me.tableV_PURCHASE_MASTER
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.BrowsableAttribute(true),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As System.Data.DataSet
        Dim cln As dsPURCHASE_MASTER = CType(MyBase.Clone,dsPURCHASE_MASTER)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("V_PURCHASE_MASTER")) Is Nothing) Then
                MyBase.Tables.Add(New V_PURCHASE_MASTERDataTable(ds.Tables("V_PURCHASE_MASTER")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableV_PURCHASE_MASTER = CType(MyBase.Tables("V_PURCHASE_MASTER"),V_PURCHASE_MASTERDataTable)
        If (initTable = true) Then
            If (Not (Me.tableV_PURCHASE_MASTER) Is Nothing) Then
                Me.tableV_PURCHASE_MASTER.InitVars
            End If
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsPURCHASE_MASTER"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsPURCHASE_MASTER.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableV_PURCHASE_MASTER = New V_PURCHASE_MASTERDataTable
        MyBase.Tables.Add(Me.tableV_PURCHASE_MASTER)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeV_PURCHASE_MASTER() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsPURCHASE_MASTER = New dsPURCHASE_MASTER
        Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
        xs.Add(ds.GetSchemaSerializable)
        Dim any As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Return type
    End Function
    
    Public Delegate Sub V_PURCHASE_MASTERRowChangeEventHandler(ByVal sender As Object, ByVal e As V_PURCHASE_MASTERRowChangeEvent)
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class V_PURCHASE_MASTERDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnPINV_NO As System.Data.DataColumn
        
        Private columnSUPPLIER_NAME As System.Data.DataColumn
        
        Private columnCASH_SUPPLIER As System.Data.DataColumn
        
        Private columnP_DATE As System.Data.DataColumn
        
        Private columnDISP_DATE As System.Data.DataColumn
        
        Private columnVEHICLE As System.Data.DataColumn
        
        Private columnTOTAL_BILL As System.Data.DataColumn
        
        Private columnDISC_RS As System.Data.DataColumn
        
        Private columnDISC_PER As System.Data.DataColumn
        
        Private columnDISC_OTHER As System.Data.DataColumn
        
        Private columnOTHER_DESC As System.Data.DataColumn
        
        Private columnNET_TOTAL As System.Data.DataColumn
        
        Private columnEMP_NAME As System.Data.DataColumn
        
        Private columnGROUP_NAME As System.Data.DataColumn
        
        Private columnnFREIGHT As System.Data.DataColumn
        
        Private columnnUNLOADING As System.Data.DataColumn
        
        Private columnsTR_NO As System.Data.DataColumn
        
        Private columnnTR_QTY As System.Data.DataColumn
        
        Private columnsREMARKS As System.Data.DataColumn
        
        Private columnLOGIN_USER As System.Data.DataColumn
        
        Private columnRECV_PER As System.Data.DataColumn
        
        Private columnRECV_RS As System.Data.DataColumn
        
        Private columnsSUP_INV_NO As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "V_PURCHASE_MASTER"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINV_NOColumn() As System.Data.DataColumn
            Get
                Return Me.columnPINV_NO
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUPPLIER_NAMEColumn() As System.Data.DataColumn
            Get
                Return Me.columnSUPPLIER_NAME
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CASH_SUPPLIERColumn() As System.Data.DataColumn
            Get
                Return Me.columnCASH_SUPPLIER
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P_DATEColumn() As System.Data.DataColumn
            Get
                Return Me.columnP_DATE
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DISP_DATEColumn() As System.Data.DataColumn
            Get
                Return Me.columnDISP_DATE
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VEHICLEColumn() As System.Data.DataColumn
            Get
                Return Me.columnVEHICLE
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOTAL_BILLColumn() As System.Data.DataColumn
            Get
                Return Me.columnTOTAL_BILL
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DISC_RSColumn() As System.Data.DataColumn
            Get
                Return Me.columnDISC_RS
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DISC_PERColumn() As System.Data.DataColumn
            Get
                Return Me.columnDISC_PER
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DISC_OTHERColumn() As System.Data.DataColumn
            Get
                Return Me.columnDISC_OTHER
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTHER_DESCColumn() As System.Data.DataColumn
            Get
                Return Me.columnOTHER_DESC
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NET_TOTALColumn() As System.Data.DataColumn
            Get
                Return Me.columnNET_TOTAL
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EMP_NAMEColumn() As System.Data.DataColumn
            Get
                Return Me.columnEMP_NAME
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GROUP_NAMEColumn() As System.Data.DataColumn
            Get
                Return Me.columnGROUP_NAME
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nFREIGHTColumn() As System.Data.DataColumn
            Get
                Return Me.columnnFREIGHT
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nUNLOADINGColumn() As System.Data.DataColumn
            Get
                Return Me.columnnUNLOADING
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sTR_NOColumn() As System.Data.DataColumn
            Get
                Return Me.columnsTR_NO
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nTR_QTYColumn() As System.Data.DataColumn
            Get
                Return Me.columnnTR_QTY
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sREMARKSColumn() As System.Data.DataColumn
            Get
                Return Me.columnsREMARKS
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LOGIN_USERColumn() As System.Data.DataColumn
            Get
                Return Me.columnLOGIN_USER
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RECV_PERColumn() As System.Data.DataColumn
            Get
                Return Me.columnRECV_PER
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RECV_RSColumn() As System.Data.DataColumn
            Get
                Return Me.columnRECV_RS
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sSUP_INV_NOColumn() As System.Data.DataColumn
            Get
                Return Me.columnsSUP_INV_NO
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As V_PURCHASE_MASTERRow
            Get
                Return CType(Me.Rows(index),V_PURCHASE_MASTERRow)
            End Get
        End Property
        
        Public Event V_PURCHASE_MASTERRowChanging As V_PURCHASE_MASTERRowChangeEventHandler
        
        Public Event V_PURCHASE_MASTERRowChanged As V_PURCHASE_MASTERRowChangeEventHandler
        
        Public Event V_PURCHASE_MASTERRowDeleting As V_PURCHASE_MASTERRowChangeEventHandler
        
        Public Event V_PURCHASE_MASTERRowDeleted As V_PURCHASE_MASTERRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddV_PURCHASE_MASTERRow(ByVal row As V_PURCHASE_MASTERRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddV_PURCHASE_MASTERRow( _
                    ByVal PINV_NO As String,  _
                    ByVal SUPPLIER_NAME As String,  _
                    ByVal CASH_SUPPLIER As String,  _
                    ByVal P_DATE As Date,  _
                    ByVal DISP_DATE As Date,  _
                    ByVal VEHICLE As String,  _
                    ByVal TOTAL_BILL As Decimal,  _
                    ByVal DISC_RS As Decimal,  _
                    ByVal DISC_PER As Decimal,  _
                    ByVal DISC_OTHER As Decimal,  _
                    ByVal OTHER_DESC As String,  _
                    ByVal NET_TOTAL As Decimal,  _
                    ByVal EMP_NAME As String,  _
                    ByVal GROUP_NAME As String,  _
                    ByVal nFREIGHT As Decimal,  _
                    ByVal nUNLOADING As Decimal,  _
                    ByVal sTR_NO As String,  _
                    ByVal nTR_QTY As Decimal,  _
                    ByVal sREMARKS As String,  _
                    ByVal LOGIN_USER As String,  _
                    ByVal RECV_PER As Decimal,  _
                    ByVal RECV_RS As Decimal,  _
                    ByVal sSUP_INV_NO As String) As V_PURCHASE_MASTERRow
            Dim rowV_PURCHASE_MASTERRow As V_PURCHASE_MASTERRow = CType(Me.NewRow,V_PURCHASE_MASTERRow)
            rowV_PURCHASE_MASTERRow.ItemArray = New Object() {PINV_NO, SUPPLIER_NAME, CASH_SUPPLIER, P_DATE, DISP_DATE, VEHICLE, TOTAL_BILL, DISC_RS, DISC_PER, DISC_OTHER, OTHER_DESC, NET_TOTAL, EMP_NAME, GROUP_NAME, nFREIGHT, nUNLOADING, sTR_NO, nTR_QTY, sREMARKS, LOGIN_USER, RECV_PER, RECV_RS, sSUP_INV_NO}
            Me.Rows.Add(rowV_PURCHASE_MASTERRow)
            Return rowV_PURCHASE_MASTERRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByPINV_NO(ByVal PINV_NO As String) As V_PURCHASE_MASTERRow
            Return CType(Me.Rows.Find(New Object() {PINV_NO}),V_PURCHASE_MASTERRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As V_PURCHASE_MASTERDataTable = CType(MyBase.Clone,V_PURCHASE_MASTERDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New V_PURCHASE_MASTERDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnPINV_NO = MyBase.Columns("PINV_NO")
            Me.columnSUPPLIER_NAME = MyBase.Columns("SUPPLIER_NAME")
            Me.columnCASH_SUPPLIER = MyBase.Columns("CASH_SUPPLIER")
            Me.columnP_DATE = MyBase.Columns("P_DATE")
            Me.columnDISP_DATE = MyBase.Columns("DISP_DATE")
            Me.columnVEHICLE = MyBase.Columns("VEHICLE")
            Me.columnTOTAL_BILL = MyBase.Columns("TOTAL_BILL")
            Me.columnDISC_RS = MyBase.Columns("DISC_RS")
            Me.columnDISC_PER = MyBase.Columns("DISC_PER")
            Me.columnDISC_OTHER = MyBase.Columns("DISC_OTHER")
            Me.columnOTHER_DESC = MyBase.Columns("OTHER_DESC")
            Me.columnNET_TOTAL = MyBase.Columns("NET_TOTAL")
            Me.columnEMP_NAME = MyBase.Columns("EMP_NAME")
            Me.columnGROUP_NAME = MyBase.Columns("GROUP_NAME")
            Me.columnnFREIGHT = MyBase.Columns("nFREIGHT")
            Me.columnnUNLOADING = MyBase.Columns("nUNLOADING")
            Me.columnsTR_NO = MyBase.Columns("sTR_NO")
            Me.columnnTR_QTY = MyBase.Columns("nTR_QTY")
            Me.columnsREMARKS = MyBase.Columns("sREMARKS")
            Me.columnLOGIN_USER = MyBase.Columns("LOGIN_USER")
            Me.columnRECV_PER = MyBase.Columns("RECV_PER")
            Me.columnRECV_RS = MyBase.Columns("RECV_RS")
            Me.columnsSUP_INV_NO = MyBase.Columns("sSUP_INV_NO")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnPINV_NO = New System.Data.DataColumn("PINV_NO", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINV_NO)
            Me.columnSUPPLIER_NAME = New System.Data.DataColumn("SUPPLIER_NAME", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIER_NAME)
            Me.columnCASH_SUPPLIER = New System.Data.DataColumn("CASH_SUPPLIER", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASH_SUPPLIER)
            Me.columnP_DATE = New System.Data.DataColumn("P_DATE", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_DATE)
            Me.columnDISP_DATE = New System.Data.DataColumn("DISP_DATE", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISP_DATE)
            Me.columnVEHICLE = New System.Data.DataColumn("VEHICLE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVEHICLE)
            Me.columnTOTAL_BILL = New System.Data.DataColumn("TOTAL_BILL", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_BILL)
            Me.columnDISC_RS = New System.Data.DataColumn("DISC_RS", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_RS)
            Me.columnDISC_PER = New System.Data.DataColumn("DISC_PER", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_PER)
            Me.columnDISC_OTHER = New System.Data.DataColumn("DISC_OTHER", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_OTHER)
            Me.columnOTHER_DESC = New System.Data.DataColumn("OTHER_DESC", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTHER_DESC)
            Me.columnNET_TOTAL = New System.Data.DataColumn("NET_TOTAL", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNET_TOTAL)
            Me.columnEMP_NAME = New System.Data.DataColumn("EMP_NAME", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_NAME)
            Me.columnGROUP_NAME = New System.Data.DataColumn("GROUP_NAME", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGROUP_NAME)
            Me.columnnFREIGHT = New System.Data.DataColumn("nFREIGHT", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnFREIGHT)
            Me.columnnUNLOADING = New System.Data.DataColumn("nUNLOADING", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnUNLOADING)
            Me.columnsTR_NO = New System.Data.DataColumn("sTR_NO", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsTR_NO)
            Me.columnnTR_QTY = New System.Data.DataColumn("nTR_QTY", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnTR_QTY)
            Me.columnsREMARKS = New System.Data.DataColumn("sREMARKS", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsREMARKS)
            Me.columnLOGIN_USER = New System.Data.DataColumn("LOGIN_USER", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOGIN_USER)
            Me.columnRECV_PER = New System.Data.DataColumn("RECV_PER", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECV_PER)
            Me.columnRECV_RS = New System.Data.DataColumn("RECV_RS", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECV_RS)
            Me.columnsSUP_INV_NO = New System.Data.DataColumn("sSUP_INV_NO", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsSUP_INV_NO)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnPINV_NO}, true))
            Me.columnPINV_NO.AllowDBNull = false
            Me.columnPINV_NO.Unique = true
            Me.columnPINV_NO.MaxLength = 50
            Me.columnSUPPLIER_NAME.AllowDBNull = false
            Me.columnSUPPLIER_NAME.MaxLength = 50
            Me.columnCASH_SUPPLIER.MaxLength = 50
            Me.columnP_DATE.AllowDBNull = false
            Me.columnDISP_DATE.AllowDBNull = false
            Me.columnVEHICLE.MaxLength = 25
            Me.columnTOTAL_BILL.AllowDBNull = false
            Me.columnDISC_RS.AllowDBNull = false
            Me.columnDISC_PER.AllowDBNull = false
            Me.columnDISC_OTHER.AllowDBNull = false
            Me.columnOTHER_DESC.MaxLength = 100
            Me.columnNET_TOTAL.AllowDBNull = false
            Me.columnEMP_NAME.AllowDBNull = false
            Me.columnEMP_NAME.MaxLength = 50
            Me.columnGROUP_NAME.MaxLength = 50
            Me.columnnFREIGHT.AllowDBNull = false
            Me.columnnUNLOADING.AllowDBNull = false
            Me.columnsTR_NO.MaxLength = 25
            Me.columnnTR_QTY.AllowDBNull = false
            Me.columnsREMARKS.MaxLength = 100
            Me.columnLOGIN_USER.MaxLength = 50
            Me.columnRECV_PER.AllowDBNull = false
            Me.columnRECV_RS.AllowDBNull = false
            Me.columnsSUP_INV_NO.MaxLength = 50
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewV_PURCHASE_MASTERRow() As V_PURCHASE_MASTERRow
            Return CType(Me.NewRow,V_PURCHASE_MASTERRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New V_PURCHASE_MASTERRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(V_PURCHASE_MASTERRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.V_PURCHASE_MASTERRowChangedEvent) Is Nothing) Then
                RaiseEvent V_PURCHASE_MASTERRowChanged(Me, New V_PURCHASE_MASTERRowChangeEvent(CType(e.Row,V_PURCHASE_MASTERRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.V_PURCHASE_MASTERRowChangingEvent) Is Nothing) Then
                RaiseEvent V_PURCHASE_MASTERRowChanging(Me, New V_PURCHASE_MASTERRowChangeEvent(CType(e.Row,V_PURCHASE_MASTERRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.V_PURCHASE_MASTERRowDeletedEvent) Is Nothing) Then
                RaiseEvent V_PURCHASE_MASTERRowDeleted(Me, New V_PURCHASE_MASTERRowChangeEvent(CType(e.Row,V_PURCHASE_MASTERRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.V_PURCHASE_MASTERRowDeletingEvent) Is Nothing) Then
                RaiseEvent V_PURCHASE_MASTERRowDeleting(Me, New V_PURCHASE_MASTERRowChangeEvent(CType(e.Row,V_PURCHASE_MASTERRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveV_PURCHASE_MASTERRow(ByVal row As V_PURCHASE_MASTERRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsPURCHASE_MASTER = New dsPURCHASE_MASTER
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "V_PURCHASE_MASTERDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class V_PURCHASE_MASTERRow
        Inherits System.Data.DataRow
        
        Private tableV_PURCHASE_MASTER As V_PURCHASE_MASTERDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableV_PURCHASE_MASTER = CType(Me.Table,V_PURCHASE_MASTERDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINV_NO() As String
            Get
                Return CType(Me(Me.tableV_PURCHASE_MASTER.PINV_NOColumn),String)
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.PINV_NOColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUPPLIER_NAME() As String
            Get
                Return CType(Me(Me.tableV_PURCHASE_MASTER.SUPPLIER_NAMEColumn),String)
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.SUPPLIER_NAMEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CASH_SUPPLIER() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_PURCHASE_MASTER.CASH_SUPPLIERColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'CASH_SUPPLIER' in table 'V_PURCHASE_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.CASH_SUPPLIERColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P_DATE() As Date
            Get
                Return CType(Me(Me.tableV_PURCHASE_MASTER.P_DATEColumn),Date)
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.P_DATEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DISP_DATE() As Date
            Get
                Return CType(Me(Me.tableV_PURCHASE_MASTER.DISP_DATEColumn),Date)
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.DISP_DATEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VEHICLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_PURCHASE_MASTER.VEHICLEColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'VEHICLE' in table 'V_PURCHASE_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.VEHICLEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOTAL_BILL() As Decimal
            Get
                Return CType(Me(Me.tableV_PURCHASE_MASTER.TOTAL_BILLColumn),Decimal)
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.TOTAL_BILLColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DISC_RS() As Decimal
            Get
                Return CType(Me(Me.tableV_PURCHASE_MASTER.DISC_RSColumn),Decimal)
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.DISC_RSColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DISC_PER() As Decimal
            Get
                Return CType(Me(Me.tableV_PURCHASE_MASTER.DISC_PERColumn),Decimal)
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.DISC_PERColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DISC_OTHER() As Decimal
            Get
                Return CType(Me(Me.tableV_PURCHASE_MASTER.DISC_OTHERColumn),Decimal)
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.DISC_OTHERColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTHER_DESC() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_PURCHASE_MASTER.OTHER_DESCColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'OTHER_DESC' in table 'V_PURCHASE_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.OTHER_DESCColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NET_TOTAL() As Decimal
            Get
                Return CType(Me(Me.tableV_PURCHASE_MASTER.NET_TOTALColumn),Decimal)
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.NET_TOTALColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EMP_NAME() As String
            Get
                Return CType(Me(Me.tableV_PURCHASE_MASTER.EMP_NAMEColumn),String)
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.EMP_NAMEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GROUP_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_PURCHASE_MASTER.GROUP_NAMEColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'GROUP_NAME' in table 'V_PURCHASE_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.GROUP_NAMEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nFREIGHT() As Decimal
            Get
                Return CType(Me(Me.tableV_PURCHASE_MASTER.nFREIGHTColumn),Decimal)
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.nFREIGHTColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nUNLOADING() As Decimal
            Get
                Return CType(Me(Me.tableV_PURCHASE_MASTER.nUNLOADINGColumn),Decimal)
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.nUNLOADINGColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sTR_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_PURCHASE_MASTER.sTR_NOColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'sTR_NO' in table 'V_PURCHASE_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.sTR_NOColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nTR_QTY() As Decimal
            Get
                Return CType(Me(Me.tableV_PURCHASE_MASTER.nTR_QTYColumn),Decimal)
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.nTR_QTYColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sREMARKS() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_PURCHASE_MASTER.sREMARKSColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'sREMARKS' in table 'V_PURCHASE_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.sREMARKSColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LOGIN_USER() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_PURCHASE_MASTER.LOGIN_USERColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'LOGIN_USER' in table 'V_PURCHASE_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.LOGIN_USERColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RECV_PER() As Decimal
            Get
                Return CType(Me(Me.tableV_PURCHASE_MASTER.RECV_PERColumn),Decimal)
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.RECV_PERColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RECV_RS() As Decimal
            Get
                Return CType(Me(Me.tableV_PURCHASE_MASTER.RECV_RSColumn),Decimal)
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.RECV_RSColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sSUP_INV_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_PURCHASE_MASTER.sSUP_INV_NOColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'sSUP_INV_NO' in table 'V_PURCHASE_MASTER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_PURCHASE_MASTER.sSUP_INV_NOColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCASH_SUPPLIERNull() As Boolean
            Return Me.IsNull(Me.tableV_PURCHASE_MASTER.CASH_SUPPLIERColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCASH_SUPPLIERNull()
            Me(Me.tableV_PURCHASE_MASTER.CASH_SUPPLIERColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVEHICLENull() As Boolean
            Return Me.IsNull(Me.tableV_PURCHASE_MASTER.VEHICLEColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVEHICLENull()
            Me(Me.tableV_PURCHASE_MASTER.VEHICLEColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTHER_DESCNull() As Boolean
            Return Me.IsNull(Me.tableV_PURCHASE_MASTER.OTHER_DESCColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTHER_DESCNull()
            Me(Me.tableV_PURCHASE_MASTER.OTHER_DESCColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGROUP_NAMENull() As Boolean
            Return Me.IsNull(Me.tableV_PURCHASE_MASTER.GROUP_NAMEColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGROUP_NAMENull()
            Me(Me.tableV_PURCHASE_MASTER.GROUP_NAMEColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssTR_NONull() As Boolean
            Return Me.IsNull(Me.tableV_PURCHASE_MASTER.sTR_NOColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsTR_NONull()
            Me(Me.tableV_PURCHASE_MASTER.sTR_NOColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssREMARKSNull() As Boolean
            Return Me.IsNull(Me.tableV_PURCHASE_MASTER.sREMARKSColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsREMARKSNull()
            Me(Me.tableV_PURCHASE_MASTER.sREMARKSColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLOGIN_USERNull() As Boolean
            Return Me.IsNull(Me.tableV_PURCHASE_MASTER.LOGIN_USERColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLOGIN_USERNull()
            Me(Me.tableV_PURCHASE_MASTER.LOGIN_USERColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssSUP_INV_NONull() As Boolean
            Return Me.IsNull(Me.tableV_PURCHASE_MASTER.sSUP_INV_NOColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsSUP_INV_NONull()
            Me(Me.tableV_PURCHASE_MASTER.sSUP_INV_NOColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class V_PURCHASE_MASTERRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As V_PURCHASE_MASTERRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As V_PURCHASE_MASTERRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As V_PURCHASE_MASTERRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
