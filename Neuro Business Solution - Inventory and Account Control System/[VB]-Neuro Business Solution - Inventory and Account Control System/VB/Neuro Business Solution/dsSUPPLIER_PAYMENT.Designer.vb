'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System


<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.ComponentModel.ToolboxItem(true),  _
 System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 System.Xml.Serialization.XmlRootAttribute("dsSUPPLIER_PAYMENT"),  _
 System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsSUPPLIER_PAYMENT
    Inherits System.Data.DataSet
    
    Private tableV_SUPPLIER_PAYMENT As V_SUPPLIER_PAYMENTDataTable
    
    Private _schemaSerializationMode As System.Data.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("V_SUPPLIER_PAYMENT")) Is Nothing) Then
                MyBase.Tables.Add(New V_SUPPLIER_PAYMENTDataTable(ds.Tables("V_SUPPLIER_PAYMENT")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property V_SUPPLIER_PAYMENT() As V_SUPPLIER_PAYMENTDataTable
        Get
            Return Me.tableV_SUPPLIER_PAYMENT
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.BrowsableAttribute(true),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As System.Data.DataSet
        Dim cln As dsSUPPLIER_PAYMENT = CType(MyBase.Clone,dsSUPPLIER_PAYMENT)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("V_SUPPLIER_PAYMENT")) Is Nothing) Then
                MyBase.Tables.Add(New V_SUPPLIER_PAYMENTDataTable(ds.Tables("V_SUPPLIER_PAYMENT")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableV_SUPPLIER_PAYMENT = CType(MyBase.Tables("V_SUPPLIER_PAYMENT"),V_SUPPLIER_PAYMENTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableV_SUPPLIER_PAYMENT) Is Nothing) Then
                Me.tableV_SUPPLIER_PAYMENT.InitVars
            End If
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsSUPPLIER_PAYMENT"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsSUPPLIER_PAYMENT.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableV_SUPPLIER_PAYMENT = New V_SUPPLIER_PAYMENTDataTable
        MyBase.Tables.Add(Me.tableV_SUPPLIER_PAYMENT)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeV_SUPPLIER_PAYMENT() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsSUPPLIER_PAYMENT = New dsSUPPLIER_PAYMENT
        Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
        xs.Add(ds.GetSchemaSerializable)
        Dim any As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Return type
    End Function
    
    Public Delegate Sub V_SUPPLIER_PAYMENTRowChangeEventHandler(ByVal sender As Object, ByVal e As V_SUPPLIER_PAYMENTRowChangeEvent)
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class V_SUPPLIER_PAYMENTDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnID As System.Data.DataColumn
        
        Private columnSUPPLIER_ID As System.Data.DataColumn
        
        Private columnSUPPLIER_NAME As System.Data.DataColumn
        
        Private columnPMT_DATE As System.Data.DataColumn
        
        Private columnCASH_AMT As System.Data.DataColumn
        
        Private columnCHQ_NO As System.Data.DataColumn
        
        Private columnCHQ_TYPE As System.Data.DataColumn
        
        Private columnCHQ_DATE As System.Data.DataColumn
        
        Private columnBANK_AMT As System.Data.DataColumn
        
        Private columnBANK_ACC As System.Data.DataColumn
        
        Private columnBANK_NAME As System.Data.DataColumn
        
        Private columnPINV_NO As System.Data.DataColumn
        
        Private columnUSER_NAME As System.Data.DataColumn
        
        Private columnGROUP_NAME As System.Data.DataColumn
        
        Private columnTOT_PAYMENT As System.Data.DataColumn
        
        Private columnEMP_NAME As System.Data.DataColumn
        
        Private columnDESCRIPTION As System.Data.DataColumn
        
        Private columnGROUP_ID As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "V_SUPPLIER_PAYMENT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDColumn() As System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUPPLIER_IDColumn() As System.Data.DataColumn
            Get
                Return Me.columnSUPPLIER_ID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUPPLIER_NAMEColumn() As System.Data.DataColumn
            Get
                Return Me.columnSUPPLIER_NAME
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PMT_DATEColumn() As System.Data.DataColumn
            Get
                Return Me.columnPMT_DATE
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CASH_AMTColumn() As System.Data.DataColumn
            Get
                Return Me.columnCASH_AMT
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CHQ_NOColumn() As System.Data.DataColumn
            Get
                Return Me.columnCHQ_NO
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CHQ_TYPEColumn() As System.Data.DataColumn
            Get
                Return Me.columnCHQ_TYPE
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CHQ_DATEColumn() As System.Data.DataColumn
            Get
                Return Me.columnCHQ_DATE
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BANK_AMTColumn() As System.Data.DataColumn
            Get
                Return Me.columnBANK_AMT
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BANK_ACCColumn() As System.Data.DataColumn
            Get
                Return Me.columnBANK_ACC
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BANK_NAMEColumn() As System.Data.DataColumn
            Get
                Return Me.columnBANK_NAME
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PINV_NOColumn() As System.Data.DataColumn
            Get
                Return Me.columnPINV_NO
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USER_NAMEColumn() As System.Data.DataColumn
            Get
                Return Me.columnUSER_NAME
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GROUP_NAMEColumn() As System.Data.DataColumn
            Get
                Return Me.columnGROUP_NAME
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOT_PAYMENTColumn() As System.Data.DataColumn
            Get
                Return Me.columnTOT_PAYMENT
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EMP_NAMEColumn() As System.Data.DataColumn
            Get
                Return Me.columnEMP_NAME
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCRIPTIONColumn() As System.Data.DataColumn
            Get
                Return Me.columnDESCRIPTION
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GROUP_IDColumn() As System.Data.DataColumn
            Get
                Return Me.columnGROUP_ID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As V_SUPPLIER_PAYMENTRow
            Get
                Return CType(Me.Rows(index),V_SUPPLIER_PAYMENTRow)
            End Get
        End Property
        
        Public Event V_SUPPLIER_PAYMENTRowChanging As V_SUPPLIER_PAYMENTRowChangeEventHandler
        
        Public Event V_SUPPLIER_PAYMENTRowChanged As V_SUPPLIER_PAYMENTRowChangeEventHandler
        
        Public Event V_SUPPLIER_PAYMENTRowDeleting As V_SUPPLIER_PAYMENTRowChangeEventHandler
        
        Public Event V_SUPPLIER_PAYMENTRowDeleted As V_SUPPLIER_PAYMENTRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddV_SUPPLIER_PAYMENTRow(ByVal row As V_SUPPLIER_PAYMENTRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddV_SUPPLIER_PAYMENTRow( _
                    ByVal SUPPLIER_ID As Decimal,  _
                    ByVal SUPPLIER_NAME As String,  _
                    ByVal PMT_DATE As Date,  _
                    ByVal CASH_AMT As Decimal,  _
                    ByVal CHQ_NO As String,  _
                    ByVal CHQ_TYPE As String,  _
                    ByVal CHQ_DATE As Date,  _
                    ByVal BANK_AMT As Decimal,  _
                    ByVal BANK_ACC As String,  _
                    ByVal BANK_NAME As String,  _
                    ByVal PINV_NO As Decimal,  _
                    ByVal USER_NAME As String,  _
                    ByVal GROUP_NAME As String,  _
                    ByVal TOT_PAYMENT As Decimal,  _
                    ByVal EMP_NAME As String,  _
                    ByVal DESCRIPTION As String) As V_SUPPLIER_PAYMENTRow
            Dim rowV_SUPPLIER_PAYMENTRow As V_SUPPLIER_PAYMENTRow = CType(Me.NewRow,V_SUPPLIER_PAYMENTRow)
            rowV_SUPPLIER_PAYMENTRow.ItemArray = New Object() {Nothing, SUPPLIER_ID, SUPPLIER_NAME, PMT_DATE, CASH_AMT, CHQ_NO, CHQ_TYPE, CHQ_DATE, BANK_AMT, BANK_ACC, BANK_NAME, PINV_NO, USER_NAME, GROUP_NAME, TOT_PAYMENT, EMP_NAME, DESCRIPTION, Nothing}
            Me.Rows.Add(rowV_SUPPLIER_PAYMENTRow)
            Return rowV_SUPPLIER_PAYMENTRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As V_SUPPLIER_PAYMENTDataTable = CType(MyBase.Clone,V_SUPPLIER_PAYMENTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New V_SUPPLIER_PAYMENTDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnSUPPLIER_ID = MyBase.Columns("SUPPLIER_ID")
            Me.columnSUPPLIER_NAME = MyBase.Columns("SUPPLIER_NAME")
            Me.columnPMT_DATE = MyBase.Columns("PMT_DATE")
            Me.columnCASH_AMT = MyBase.Columns("CASH_AMT")
            Me.columnCHQ_NO = MyBase.Columns("CHQ_NO")
            Me.columnCHQ_TYPE = MyBase.Columns("CHQ_TYPE")
            Me.columnCHQ_DATE = MyBase.Columns("CHQ_DATE")
            Me.columnBANK_AMT = MyBase.Columns("BANK_AMT")
            Me.columnBANK_ACC = MyBase.Columns("BANK_ACC")
            Me.columnBANK_NAME = MyBase.Columns("BANK_NAME")
            Me.columnPINV_NO = MyBase.Columns("PINV_NO")
            Me.columnUSER_NAME = MyBase.Columns("USER_NAME")
            Me.columnGROUP_NAME = MyBase.Columns("GROUP_NAME")
            Me.columnTOT_PAYMENT = MyBase.Columns("TOT_PAYMENT")
            Me.columnEMP_NAME = MyBase.Columns("EMP_NAME")
            Me.columnDESCRIPTION = MyBase.Columns("DESCRIPTION")
            Me.columnGROUP_ID = MyBase.Columns("GROUP_ID")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnID = New System.Data.DataColumn("ID", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnSUPPLIER_ID = New System.Data.DataColumn("SUPPLIER_ID", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIER_ID)
            Me.columnSUPPLIER_NAME = New System.Data.DataColumn("SUPPLIER_NAME", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPPLIER_NAME)
            Me.columnPMT_DATE = New System.Data.DataColumn("PMT_DATE", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPMT_DATE)
            Me.columnCASH_AMT = New System.Data.DataColumn("CASH_AMT", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASH_AMT)
            Me.columnCHQ_NO = New System.Data.DataColumn("CHQ_NO", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHQ_NO)
            Me.columnCHQ_TYPE = New System.Data.DataColumn("CHQ_TYPE", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHQ_TYPE)
            Me.columnCHQ_DATE = New System.Data.DataColumn("CHQ_DATE", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHQ_DATE)
            Me.columnBANK_AMT = New System.Data.DataColumn("BANK_AMT", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBANK_AMT)
            Me.columnBANK_ACC = New System.Data.DataColumn("BANK_ACC", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBANK_ACC)
            Me.columnBANK_NAME = New System.Data.DataColumn("BANK_NAME", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBANK_NAME)
            Me.columnPINV_NO = New System.Data.DataColumn("PINV_NO", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINV_NO)
            Me.columnUSER_NAME = New System.Data.DataColumn("USER_NAME", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSER_NAME)
            Me.columnGROUP_NAME = New System.Data.DataColumn("GROUP_NAME", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGROUP_NAME)
            Me.columnTOT_PAYMENT = New System.Data.DataColumn("TOT_PAYMENT", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOT_PAYMENT)
            Me.columnEMP_NAME = New System.Data.DataColumn("EMP_NAME", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_NAME)
            Me.columnDESCRIPTION = New System.Data.DataColumn("DESCRIPTION", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPTION)
            Me.columnGROUP_ID = New System.Data.DataColumn("GROUP_ID", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGROUP_ID)
            Me.columnID.AutoIncrement = true
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnSUPPLIER_ID.AllowDBNull = false
            Me.columnSUPPLIER_NAME.AllowDBNull = false
            Me.columnSUPPLIER_NAME.MaxLength = 50
            Me.columnPMT_DATE.AllowDBNull = false
            Me.columnCHQ_NO.MaxLength = 50
            Me.columnCHQ_TYPE.MaxLength = 25
            Me.columnBANK_ACC.MaxLength = 50
            Me.columnBANK_NAME.MaxLength = 50
            Me.columnUSER_NAME.MaxLength = 50
            Me.columnGROUP_NAME.MaxLength = 50
            Me.columnTOT_PAYMENT.ReadOnly = true
            Me.columnEMP_NAME.AllowDBNull = false
            Me.columnEMP_NAME.MaxLength = 50
            Me.columnDESCRIPTION.MaxLength = 100
            Me.columnGROUP_ID.AutoIncrement = true
            Me.columnGROUP_ID.AllowDBNull = false
            Me.columnGROUP_ID.ReadOnly = true
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewV_SUPPLIER_PAYMENTRow() As V_SUPPLIER_PAYMENTRow
            Return CType(Me.NewRow,V_SUPPLIER_PAYMENTRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New V_SUPPLIER_PAYMENTRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(V_SUPPLIER_PAYMENTRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.V_SUPPLIER_PAYMENTRowChangedEvent) Is Nothing) Then
                RaiseEvent V_SUPPLIER_PAYMENTRowChanged(Me, New V_SUPPLIER_PAYMENTRowChangeEvent(CType(e.Row,V_SUPPLIER_PAYMENTRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.V_SUPPLIER_PAYMENTRowChangingEvent) Is Nothing) Then
                RaiseEvent V_SUPPLIER_PAYMENTRowChanging(Me, New V_SUPPLIER_PAYMENTRowChangeEvent(CType(e.Row,V_SUPPLIER_PAYMENTRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.V_SUPPLIER_PAYMENTRowDeletedEvent) Is Nothing) Then
                RaiseEvent V_SUPPLIER_PAYMENTRowDeleted(Me, New V_SUPPLIER_PAYMENTRowChangeEvent(CType(e.Row,V_SUPPLIER_PAYMENTRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.V_SUPPLIER_PAYMENTRowDeletingEvent) Is Nothing) Then
                RaiseEvent V_SUPPLIER_PAYMENTRowDeleting(Me, New V_SUPPLIER_PAYMENTRowChangeEvent(CType(e.Row,V_SUPPLIER_PAYMENTRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveV_SUPPLIER_PAYMENTRow(ByVal row As V_SUPPLIER_PAYMENTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsSUPPLIER_PAYMENT = New dsSUPPLIER_PAYMENT
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "V_SUPPLIER_PAYMENTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class V_SUPPLIER_PAYMENTRow
        Inherits System.Data.DataRow
        
        Private tableV_SUPPLIER_PAYMENT As V_SUPPLIER_PAYMENTDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableV_SUPPLIER_PAYMENT = CType(Me.Table,V_SUPPLIER_PAYMENTDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ID() As Decimal
            Get
                Return CType(Me(Me.tableV_SUPPLIER_PAYMENT.IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableV_SUPPLIER_PAYMENT.IDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUPPLIER_ID() As Decimal
            Get
                Return CType(Me(Me.tableV_SUPPLIER_PAYMENT.SUPPLIER_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableV_SUPPLIER_PAYMENT.SUPPLIER_IDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUPPLIER_NAME() As String
            Get
                Return CType(Me(Me.tableV_SUPPLIER_PAYMENT.SUPPLIER_NAMEColumn),String)
            End Get
            Set
                Me(Me.tableV_SUPPLIER_PAYMENT.SUPPLIER_NAMEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PMT_DATE() As Date
            Get
                Return CType(Me(Me.tableV_SUPPLIER_PAYMENT.PMT_DATEColumn),Date)
            End Get
            Set
                Me(Me.tableV_SUPPLIER_PAYMENT.PMT_DATEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CASH_AMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableV_SUPPLIER_PAYMENT.CASH_AMTColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'CASH_AMT' in table 'V_SUPPLIER_PAYMENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_SUPPLIER_PAYMENT.CASH_AMTColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CHQ_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_SUPPLIER_PAYMENT.CHQ_NOColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'CHQ_NO' in table 'V_SUPPLIER_PAYMENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_SUPPLIER_PAYMENT.CHQ_NOColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CHQ_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_SUPPLIER_PAYMENT.CHQ_TYPEColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'CHQ_TYPE' in table 'V_SUPPLIER_PAYMENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_SUPPLIER_PAYMENT.CHQ_TYPEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CHQ_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableV_SUPPLIER_PAYMENT.CHQ_DATEColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'CHQ_DATE' in table 'V_SUPPLIER_PAYMENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_SUPPLIER_PAYMENT.CHQ_DATEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BANK_AMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableV_SUPPLIER_PAYMENT.BANK_AMTColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'BANK_AMT' in table 'V_SUPPLIER_PAYMENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_SUPPLIER_PAYMENT.BANK_AMTColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BANK_ACC() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_SUPPLIER_PAYMENT.BANK_ACCColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'BANK_ACC' in table 'V_SUPPLIER_PAYMENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_SUPPLIER_PAYMENT.BANK_ACCColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BANK_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_SUPPLIER_PAYMENT.BANK_NAMEColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'BANK_NAME' in table 'V_SUPPLIER_PAYMENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_SUPPLIER_PAYMENT.BANK_NAMEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PINV_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableV_SUPPLIER_PAYMENT.PINV_NOColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'PINV_NO' in table 'V_SUPPLIER_PAYMENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_SUPPLIER_PAYMENT.PINV_NOColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USER_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_SUPPLIER_PAYMENT.USER_NAMEColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'USER_NAME' in table 'V_SUPPLIER_PAYMENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_SUPPLIER_PAYMENT.USER_NAMEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GROUP_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_SUPPLIER_PAYMENT.GROUP_NAMEColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'GROUP_NAME' in table 'V_SUPPLIER_PAYMENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_SUPPLIER_PAYMENT.GROUP_NAMEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOT_PAYMENT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableV_SUPPLIER_PAYMENT.TOT_PAYMENTColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'TOT_PAYMENT' in table 'V_SUPPLIER_PAYMENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_SUPPLIER_PAYMENT.TOT_PAYMENTColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EMP_NAME() As String
            Get
                Return CType(Me(Me.tableV_SUPPLIER_PAYMENT.EMP_NAMEColumn),String)
            End Get
            Set
                Me(Me.tableV_SUPPLIER_PAYMENT.EMP_NAMEColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_SUPPLIER_PAYMENT.DESCRIPTIONColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'DESCRIPTION' in table 'V_SUPPLIER_PAYMENT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_SUPPLIER_PAYMENT.DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GROUP_ID() As Decimal
            Get
                Return CType(Me(Me.tableV_SUPPLIER_PAYMENT.GROUP_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableV_SUPPLIER_PAYMENT.GROUP_IDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCASH_AMTNull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_PAYMENT.CASH_AMTColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCASH_AMTNull()
            Me(Me.tableV_SUPPLIER_PAYMENT.CASH_AMTColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCHQ_NONull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_PAYMENT.CHQ_NOColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCHQ_NONull()
            Me(Me.tableV_SUPPLIER_PAYMENT.CHQ_NOColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCHQ_TYPENull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_PAYMENT.CHQ_TYPEColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCHQ_TYPENull()
            Me(Me.tableV_SUPPLIER_PAYMENT.CHQ_TYPEColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCHQ_DATENull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_PAYMENT.CHQ_DATEColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCHQ_DATENull()
            Me(Me.tableV_SUPPLIER_PAYMENT.CHQ_DATEColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBANK_AMTNull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_PAYMENT.BANK_AMTColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBANK_AMTNull()
            Me(Me.tableV_SUPPLIER_PAYMENT.BANK_AMTColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBANK_ACCNull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_PAYMENT.BANK_ACCColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBANK_ACCNull()
            Me(Me.tableV_SUPPLIER_PAYMENT.BANK_ACCColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBANK_NAMENull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_PAYMENT.BANK_NAMEColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBANK_NAMENull()
            Me(Me.tableV_SUPPLIER_PAYMENT.BANK_NAMEColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPINV_NONull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_PAYMENT.PINV_NOColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPINV_NONull()
            Me(Me.tableV_SUPPLIER_PAYMENT.PINV_NOColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUSER_NAMENull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_PAYMENT.USER_NAMEColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUSER_NAMENull()
            Me(Me.tableV_SUPPLIER_PAYMENT.USER_NAMEColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGROUP_NAMENull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_PAYMENT.GROUP_NAMEColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGROUP_NAMENull()
            Me(Me.tableV_SUPPLIER_PAYMENT.GROUP_NAMEColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOT_PAYMENTNull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_PAYMENT.TOT_PAYMENTColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOT_PAYMENTNull()
            Me(Me.tableV_SUPPLIER_PAYMENT.TOT_PAYMENTColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableV_SUPPLIER_PAYMENT.DESCRIPTIONColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESCRIPTIONNull()
            Me(Me.tableV_SUPPLIER_PAYMENT.DESCRIPTIONColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class V_SUPPLIER_PAYMENTRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As V_SUPPLIER_PAYMENTRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As V_SUPPLIER_PAYMENTRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As V_SUPPLIER_PAYMENTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
