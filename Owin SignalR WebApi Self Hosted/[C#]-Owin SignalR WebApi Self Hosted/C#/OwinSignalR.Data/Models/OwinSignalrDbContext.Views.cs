//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(OwinSignalR.Data.Models.OwinSignalrDbContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets649da31e7a02008cb1d8ba8b15ec9fec88470d37c2c3d58fc26ea9e1a02db409))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySets649da31e7a02008cb1d8ba8b15ec9fec88470d37c2c3d58fc26ea9e1a02db409 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "649da31e7a02008cb1d8ba8b15ec9fec88470d37c2c3d58fc26ea9e1a02db409"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "OwinSignalRModelStoreContainer.Application")
            {
                return GetView0();
            }

            if (extentName == "OwinSignalRModelStoreContainer.ApplicationReferralUrl")
            {
                return GetView1();
            }

            if (extentName == "OwinSignalrDbContext.Applications")
            {
                return GetView2();
            }

            if (extentName == "OwinSignalrDbContext.ApplicationReferralUrls")
            {
                return GetView3();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for OwinSignalRModelStoreContainer.Application.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Application
        [OwinSignalRModel.Store.Application](T1.Application_ApplicationId, T1.Application_ApplicationName, T1.Application_ApiToken, T1.Application_ApplicationSecret)
    FROM (
        SELECT 
            T.ApplicationId AS Application_ApplicationId, 
            T.ApplicationName AS Application_ApplicationName, 
            T.ApiToken AS Application_ApiToken, 
            T.ApplicationSecret AS Application_ApplicationSecret, 
            True AS _from0
        FROM OwinSignalrDbContext.Applications AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for OwinSignalRModelStoreContainer.ApplicationReferralUrl.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ApplicationReferralUrl
        [OwinSignalRModel.Store.ApplicationReferralUrl](T1.ApplicationReferralUrl_ApplicationReferralUrlId, T1.ApplicationReferralUrl_ApplicationId, T1.ApplicationReferralUrl_Url)
    FROM (
        SELECT 
            T.ApplicationReferralUrlId AS ApplicationReferralUrl_ApplicationReferralUrlId, 
            T.ApplicationId AS ApplicationReferralUrl_ApplicationId, 
            T.Url AS ApplicationReferralUrl_Url, 
            True AS _from0
        FROM OwinSignalrDbContext.ApplicationReferralUrls AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for OwinSignalrDbContext.Applications.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Applications
        [OwinSignalRModel.Application](T1.Application_ApplicationId, T1.Application_ApplicationName, T1.Application_ApiToken, T1.Application_ApplicationSecret)
    FROM (
        SELECT 
            T.ApplicationId AS Application_ApplicationId, 
            T.ApplicationName AS Application_ApplicationName, 
            T.ApiToken AS Application_ApiToken, 
            T.ApplicationSecret AS Application_ApplicationSecret, 
            True AS _from0
        FROM OwinSignalRModelStoreContainer.Application AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for OwinSignalrDbContext.ApplicationReferralUrls.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ApplicationReferralUrls
        [OwinSignalRModel.ApplicationReferralUrl](T1.ApplicationReferralUrl_ApplicationReferralUrlId, T1.ApplicationReferralUrl_ApplicationId, T1.ApplicationReferralUrl_Url)
    FROM (
        SELECT 
            T.ApplicationReferralUrlId AS ApplicationReferralUrl_ApplicationReferralUrlId, 
            T.ApplicationId AS ApplicationReferralUrl_ApplicationId, 
            T.Url AS ApplicationReferralUrl_Url, 
            True AS _from0
        FROM OwinSignalRModelStoreContainer.ApplicationReferralUrl AS T
    ) AS T1");
        }
    }
}
